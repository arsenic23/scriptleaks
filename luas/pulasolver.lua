local a=require("ffi")local b=require("gamesense/inspect")local c=bit.band;local d=math.floor;local e=math.sqrt;local f=math.min;local g=math.max;local h=math.abs;local i=math.rad;local j=math.exp;local k=math.cos;local l=math.sin;local m=table.insert;local n=table.remove;local o=string.format;local p=entity.get_prop;local q=entity.is_alive;local r=entity.get_players;local s=client.current_threat;local t=client.screen_size;local u=client.delay_call;local v=client.color_log;local w=client.unix_time;local x=globals.curtime;local y=globals.frametime;local z=globals.realtime;local A=ui.get;local B=ui.set;local C=ui.set_visible;local D=plist.get;local E=plist.set;local F=renderer.blur;local G=renderer.rectangle;local H=renderer.text;local I=renderer.circle;local J={ui.reference("MISC","Settings","Menu color")}local K,L,M,N=ui.get(J[1])a.cdef("\tstruct animation_layer_t {\n\t\tchar pad_0000[20];\n\t\tuint32_t m_nOrder;\n\t\tuint32_t m_nSequence;\n\t\tfloat m_flPrevCycle;\n\t\tfloat m_flWeight;\n\t\tfloat m_flWeightDeltaRate;\n\t\tfloat m_flPlaybackRate;\n\t\tfloat m_flCycle;\n\t\tvoid *m_pOwner;\n\t\tchar pad_0038[4];\n\t};\n")a.cdef("    typedef struct {\n        float x;\n        float y;\n        float z;\n    } Vector;\n    \n    typedef struct {\n        float m[3][4];\n    } matrix3x4_t;\n")local O={LAYER_AIMMATRIX=0,LAYER_WEAPON_ACTION=1,LAYER_WEAPON_ACTION_RECROUCH=2,LAYER_ADJUST=3,LAYER_MOVEMENT_JUMP_OR_FALL=4,LAYER_MOVEMENT_LAND_OR_CLIMB=5,LAYER_MOVEMENT_MOVE=6,LAYER_MOVEMENT_STRAFECHANGE=7,LAYER_WHOLE_BODY=8,LAYER_FLASHED=9,LAYER_FLINCH=10,LAYER_ALIVELOOP=11,LAYER_LEAN=12,MAX_DESYNC_DELTA=58,MAX_HISTORY_SIZE=64,JITTER_DETECTION_THRESHOLD=30,DEFENSIVE_TRIGGER_TIME=0.19999999999998863,PATTERN_MEMORY_SIZE=32,MIN_PATTERN_SAMPLES=8,LAYER_CORRELATION_THRESHOLD=0.6499999999999773,STATE_STAND=1,STATE_MOVE=2,STATE_CROUCH=3,STATE_AIR=4,STATE_SLOWWALK=5,STATE_CROUCHWALK=6}local P=a.typeof("void***")local Q=a.typeof("void*(__thiscall*)(void*, int)")local R=a.typeof("void*(__thiscall*)(void*, const void*)")local S=a.typeof("int(__fastcall*)(void*, void*, int)")local T=client.create_interface("engine.dll","VModelInfoClient004")local U=a.cast(P,T)or error("Model info interface not found",2)local V=a.cast(R,U[0][32])local W=client.find_signature("client_panorama.dll","U??S?]\bV??")local X=client.create_interface("client_panorama.dll","VClientEntityList003")local Y=a.cast(P,X)or error("Entity list interface not found",2)local Z=a.cast(Q,Y[0][3])local _=setmetatable({},{__mode="kv"})local function a0(a1,...)if _[a1]then return _[a1]end;local a2=Z(Y,a1)if a2==nil then return nil end;_[a1]=a2;return a2 end;local function a3(a4,...)if a4 then a4=a.cast(P,a4)local a5=a.cast("void*(__thiscall*)(void*)",a4[0][0])(a4)if a5 then a5=a.cast(P,a5)local a6=a.cast("void*(__thiscall*)(void*)",a5[0][5])(a5)if a6 then a6=a.cast(P,a6)return a.cast("const void*(__thiscall*)(void*)",a6[0][8])(a6)end end end;return nil end;local function a7(a8,a9,...)if not a8 or not a9 then return-1 end;local aa=a3(a8)if not aa then return-1 end;local ab=V(U,aa)if not ab then return-1 end;local ac=a.cast(S,W)return ac(a8,ab,a9)end;local function ad(ae,af,...)if not ae then return nil end;local ag=a.cast("struct animation_layer_t**",a.cast("char*",ae)+10640)if ag==nil or ag[0]==nil then return nil end;return af>=0 and af<=13 and ag[0][af]or nil end;local ah={}local function ai(aj,...)if not aj then return{}end;for ak in pairs(ah)do ah[ak]=nil end;for al=0,13,1 do local am=ad(aj,al)if am then ah[al]={sequence=am.m_nSequence,weight=am.m_flWeight,cycle=am.m_flCycle,playback_rate=am.m_flPlaybackRate,prev_cycle=am.m_flPrevCycle,weight_delta_rate=am.m_flWeightDeltaRate}end end;return ah end;local an={clamp=function(ao,ap,aq,...)if ao>aq then return aq end;if ao<ap then return ap end;return ao end,normalize_yaw=function(ar,...)while ar>360 do ar=ar-360 end;while ar<0 do ar=ar+360 end;return ar end,to_180_range=function(as,...)if as>180 then return as-360 end;return as end,lerp=function(at,au,av,...)return at+(au-at)*av end,approach_angle=function(aw,ax,ay,...)local az=math_util.to_180_range(aw-ax)if ay>math.abs(az)then return aw end;return math_util.normalize_yaw(ax+(az>=0 and ay or-ay))end,angle_diff=function(aA,aB,...)local aC=math.abs(math_util.to_180_range(aA)-math_util.to_180_range(aB))%360;return aC>180 and 360-aC or aC end}local aD={length=function(aE,...)return math.sqrt(aE.x*aE.x+aE.y*aE.y+aE.z*aE.z)end,length2d=function(aF,...)return math.sqrt(aF.x*aF.x+aF.y*aF.y)end,get_velocity=function(aG,...)local aH=entity.get_prop(aG,"m_vecVelocity[0]")or 0;local aI=entity.get_prop(aG,"m_vecVelocity[1]")or 0;local aJ=entity.get_prop(aG,"m_vecVelocity[2]")or 0;return{x=aH,y=aI,z=aJ}end,get_origin=function(aK,...)local aL=entity.get_prop(aK,"m_vecOrigin[0]")or 0;local aM=entity.get_prop(aK,"m_vecOrigin[1]")or 0;local aN=entity.get_prop(aK,"m_vecOrigin[2]")or 0;return{x=aL,y=aM,z=aN}end}local aO={get_state=function(aP,...)local aQ=entity.get_prop(aP,"m_flDuckAmount")or 0;local aR=entity.get_prop(aP,"m_fFlags")or 0;local aS=bit.band(aR,1)==0;local aT=aD.get_velocity(aP)local aU=aD.length2d(aT)if aS then return O.STATE_AIR elseif aQ>0.7000000000000455 then return aU>20 and O.STATE_CROUCHWALK or O.STATE_CROUCH elseif aU<5 then return O.STATE_STAND elseif aU<40 then return O.STATE_SLOWWALK else return O.STATE_MOVE end end}local aV={data={},stats={total_hits=0,total_misses=0,hits_by_method={animation=0,adaptive=0,pattern=0},misses_by_method={animation=0,adaptive=0,pattern=0},pattern_success={},last_update=0,layer_correlations={}},analyze_layers=function(aW,...)if not aW or not aW[O.LAYER_MOVEMENT_MOVE]then return nil end;local aX=aW[O.LAYER_MOVEMENT_MOVE]local aY=aW[O.LAYER_AIMMATRIX]local aZ=aW[O.LAYER_WEAPON_ACTION]local a_=aW[O.LAYER_MOVEMENT_STRAFECHANGE]local b0=aX.playback_rate or 0;local b1=aX.weight or 0;local b2=aX.cycle or 0;local b3={}for b4=1,13,1 do b3[b4]=d(b0*10^b4)%10 end;local b5={}if aY and aZ then b5.aim_weapon={weight_diff=h(aY.weight-aZ.weight),cycle_diff=h(aY.cycle-aZ.cycle),playback_diff=h(aY.playback_rate-aZ.playback_rate)}end;if a_ then b5.strafe_move={weight_ratio=a_.weight/(b1+9.999999997489795E-5),cycle_sync=h(a_.cycle-b2),direction_change=a_.weight_delta_rate*aX.weight_delta_rate<0}end;local b6={is_moving=b3[3]~=0 or b1>0.09999999999990905,consistent_movement=b1>0.8000000000000114 and aX.weight_delta_rate<0.09999999999990905,direction_changes=a_ and a_.weight_delta_rate>0.5,micro_adjustments=b3[2]>0 and b3[3]<5}local b7={weight_spread=b5.aim_weapon and b5.aim_weapon.weight_diff or 0,cycle_delta=b5.aim_weapon and b5.aim_weapon.cycle_diff or 0,playback_correlation=b5.aim_weapon and b5.aim_weapon.playback_diff<0.09999999999999432,strafe_info=b5.strafe_move,movement=b6,digits=b3,complexity_score=0}b7.complexity_score=b7.weight_spread*0.2999999999999545+b7.cycle_delta*0.3000000000001819+(b6.direction_changes and 0.1999999999998181 or 0)+(b6.micro_adjustments and 0.14999999999997726 or 0)+(b5.strafe_move and(b5.strafe_move.direction_change and 0.049999999999954525)or 0)return b7 end,analyze_patterns=function(b8,b9,ba,...)if#b9.pattern_history<O.MIN_PATTERN_SAMPLES then return nil end;local bb={}for bc=math.max(1,#b9.pattern_history-O.PATTERN_MEMORY_SIZE),#b9.pattern_history,1 do m(bb,b9.pattern_history[bc])end;local bd=0;local be=nil;local bf=0;local bg=0;local bh=0;local bi=0;for bj,bk in ipairs(bb)do local bl=j((bj-#bb)*0.09999999999990905)if be and bk.side~=be then bd=bd+1 end;if bj>1 then local bm=bk.time-bb[bj-1].time;if h(bm-0.015000000000100044)<0.0019999999999527063 then bf=bf+1 end;bg=bg+bm end;bh=bh+bk.side*bl;bi=bi+bl;be=bk.side end;local bn=bg/(#bb-1)local bo=bd/(#bb-1)local bp=bf/(#bb-1)local bq=bh/bi;local br="unknown"local bs=0.5;if bo>0.4000000000000057 and bp>0.7999999999999545 then br="jitter"bs=bp*0.7999999999999545+0.1999999999998181 elseif bo<0.10000000000002274 and bp>0.7000000000000455 then br="static"bs=(1-bo)*0.7000000000000455+bp*0.2999999999999545 elseif bo>0.20000000000004547 and bo<0.39999999999997726 then br="switch"bs=bp*0.599999999999909+(1-h(0.3000000000001819-bo))*0.40000000000009095 end;return{pattern_type=br,confidence=bs,weighted_side=bq,direction_change_rate=bo,interval_consistency=bp}end,resolve=function(bt,bu,...)if not bt.data[bu]then bt.data[bu]={last_update=0,layers={},side=1,desync=25,state=O.STATE_STAND,pattern_history={},success_rates={},last_analysis=nil,defensive_stats={last_defensive=0,defensive_count=0}}end;local bv=bt.data[bu]local bw=x()if bw-bv.last_update<0.01499999999987267 then return bv.side,bv.desync end;local bx=a0(bu)if not bx then return bv.side,bv.desync end;bv.layers=ai(bx)bv.state=aO.get_state(bu)local by=bt.analyze_layers(bv.layers)if not by then return bv.side,bv.desync end;m(bv.pattern_history,{time=bw,side=bv.side,desync=bv.desync,complexity=by.complexity_score,state=bv.state})if#bv.pattern_history>O.PATTERN_MEMORY_SIZE then n(bv.pattern_history,1)end;local bz=bt:analyze_patterns(bv,by)local bA=1;local bB=25;local bC=1;printf("Pattern Info: %s",bz and bz.pattern_type or"None")if bz and bz.confidence>0.7000000000000455 then if bz.pattern_type=="jitter"then bA=bz.weighted_side>0 and 2 or 1;bB=O.MAX_DESYNC_DELTA*0.900000000000091;bC=bz.confidence elseif bz.pattern_type=="static"then bA=by.weight_spread>0.5 and 2 or 1;bB=f(58*by.cycle_delta*1.1000000000000227,58)bC=bz.confidence*0.900000000000091 elseif bz.pattern_type=="switch"then bA=bz.weighted_side>0 and 2 or 1;bB=f(58*(by.complexity_score+0.20000000000004547),58)bC=bz.confidence*0.7999999999999545 end else if by.movement.is_moving then if by.movement.consistent_movement then bA=by.strafe_info and(by.strafe_info.weight_ratio>1.2000000000000455 and 2)or 1;bB=f(58*by.cycle_delta*1.1499999999999773,58)else bA=by.weight_spread>0.5 and 2 or 1;bB=f(58*(by.complexity_score+0.09999999999990905),58)end;bC=by.movement.consistent_movement and 0.900000000000091 or 0.6999999999998181 else if by.micro_adjustments then bA=by.digits[4]>5 and 2 or 1;bB=f(58*(by.weight_spread+0.14999999999997726),58)bC=0.8500000000000227 else bA=by.weight_spread>0.599999999999909 and 2 or 1;bB=f(58*by.cycle_delta*1.1000000000000227,58)bC=0.75 end end end;if bv.state==O.STATE_AIR then bB=bB*0.849999999999909;bC=bC*0.8999999999999773 elseif bv.state==O.STATE_CROUCH then bB=bB*0.9200000000000728;bC=bC*0.9500000000000455 elseif bv.state==O.STATE_SLOWWALK then bB=bB*1.0800000000000125;bC=bC*1.0500000000000114 end;if by.complexity_score>0.8000000000000114 and bw-bv.defensive_stats.last_defensive<O.DEFENSIVE_TRIGGER_TIME then bv.defensive_stats.defensive_count=bv.defensive_stats.defensive_count+1;if bv.defensive_stats.defensive_count>3 then bB=bB*1.150000000000091;bC=bC*1.1000000000000227 end else bv.defensive_stats.defensive_count=g(0,bv.defensive_stats.defensive_count-1)end;bB=bB*bC;bv.side=bA;bv.desync=an.clamp(bB,0,O.MAX_DESYNC_DELTA)bv.last_update=bw;bv.last_analysis=by;return bv.side,bv.desync end,on_hit=function(bD,bE,bF,...)if not bD.data[bE]then return end;local bG=bD.data[bE]local bH=x()local bI=tostring(bF)bG.success_rates[bI]=(bG.success_rates[bI]or 0.5)*0.9000000000000057+0.09999999999999432;bD.stats.total_hits=bD.stats.total_hits+1;if bG.last_analysis and bG.last_analysis.complexity_score>0.7000000000000455 then bD.stats.hits_by_method.pattern=bD.stats.hits_by_method.pattern+1 else bD.stats.hits_by_method.animation=bD.stats.hits_by_method.animation+1 end;if#bG.pattern_history>0 then local bJ=bG.pattern_history[#bG.pattern_history]m(bD.stats.pattern_success,{time=bH,pattern_type=bJ.pattern_type,complexity=bJ.complexity,state=bJ.state})if#bD.stats.pattern_success>32 then n(bD.stats.pattern_success,1)end end end,on_miss=function(bK,bL,bM,...)if not bK.data[bL]then return end;local bN=bK.data[bL]local bO=tostring(bM)bN.success_rates[bO]=(bN.success_rates[bO]or 0.5)*0.7999999999999545;bK.stats.total_misses=bK.stats.total_misses+1;if bN.last_analysis and bN.last_analysis.complexity_score>0.7000000000000455 then bK.stats.misses_by_method.pattern=bK.stats.misses_by_method.pattern+1 else bK.stats.misses_by_method.animation=bK.stats.misses_by_method.animation+1 end end}RGBtoHEX=function(bP,bQ,...)return string.format(bQ and"%02X%02X%02X"or"%02X%02X%02X%02X",bP.r,bP.g,bP.b,bP.a)end;local bR=RGBtoHEX({r=K,g=L,b=M,a=N},false)local bS={input_size=48,hidden_size=64,hidden_layers=3,output_size=4,learning_rate=0.05000000000001137,momentum=0.9199999999999591,dropout_rate=0.15000000000009095,potentials={hidden1={},hidden2={},hidden3={},output={},momentum_hidden1={},momentum_hidden2={},momentum_hidden3={},momentum_output={}},training_memory={buffer={},priorities={},max_size=1000,min_priority=0.049999999999954525,adaptive_batch_size=true,min_batch_size=16,max_batch_size=32,current_batch_size=16},persistence={save_interval=100,last_save=0,file_persistence=true},recent_predictions={},patterns={},movement_patterns={},state_patterns={},last_positions={},last_angles={},last_velocities={},training_stats={last_update=0,update_interval=0.5,total_loss=0,total_samples=0,avg_loss=0,hit_rate=0,miss_rate=0}}local bT={angle_diff=function(bU,bV,...)local bW=math.fmod(bU-bV,360)if bU>bV then return bW>=180 and bW-360 or bW else return bW<=-180 and bW+360 or bW end end,normalize=function(bX,...)bX=math.fmod(bX,360)return bX>180 and bX-360 or bX<-180 and bX+360 or bX end,lerp=function(bY,bZ,b_,...)local c0=globals.frametime()*b_;return bY+(bZ-bY)*math.min(c0,1)end,clamp=function(c1,c2,c3,...)return math.min(math.max(c1,c2),c3)end,approach_angle=function(c4,c5,c6,...)c4=math.fmod(c4,360)c5=math.fmod(c5,360)local c7=c4-c5;if c7<-180 then c7=c7+360 elseif c7>180 then c7=c7-360 end;if c7>c6 then return c5+c6 elseif c7<-c6 then return c5-c6 else return c4 end end,xavier_init=function(c8,c9,...)local ca=math.sqrt(6/(c8+c9))return(math.random()*2-1)*ca end}local cb={leaky_relu=function(cc,...)return cc>0 and cc or 0.009999999999990905*cc end,sigmoid=function(cd,...)return 1/(1+math.exp(-cd))end}local function ce(...)for cf=1,bS.input_size,1 do bS.potentials.hidden1[cf]={}bS.potentials.momentum_hidden1[cf]={}for cg=1,bS.hidden_size,1 do bS.potentials.hidden1[cf][cg]=bT.xavier_init(bS.input_size,bS.hidden_size)bS.potentials.momentum_hidden1[cf][cg]=0 end end;for ch=1,bS.hidden_size,1 do bS.potentials.hidden2[ch]={}bS.potentials.hidden3[ch]={}bS.potentials.output[ch]={}bS.potentials.momentum_hidden2[ch]={}bS.potentials.momentum_hidden3[ch]={}bS.potentials.momentum_output[ch]={}for ci=1,bS.hidden_size,1 do bS.potentials.hidden2[ch][ci]=bT.xavier_init(bS.hidden_size,bS.hidden_size)bS.potentials.hidden3[ch][ci]=bT.xavier_init(bS.hidden_size,bS.hidden_size)bS.potentials.momentum_hidden2[ch][ci]=0;bS.potentials.momentum_hidden3[ch][ci]=0 end;for cj=1,bS.output_size,1 do bS.potentials.output[ch][cj]=bT.xavier_init(bS.hidden_size,bS.output_size)bS.potentials.momentum_output[ch][cj]=0 end end end;local function ck(cl,cm,...)local cn={}local co=1/(1-cm)for cp=1,#cl,1 do cn[cp]=math.random()>cm and co or 0;cl[cp]=cl[cp]*cn[cp]end;return cl,cn end;local function cq(cr,cs,...)local ct={}local cu={}ct[1]={}for cv=1,bS.hidden_size,1 do local cw=0;for cx=1,bS.input_size,1 do cw=cw+(cr[cx]or 0)*(bS.potentials.hidden1[cx][cv]or 0)end;ct[1][cv]=cb.leaky_relu(cw)end;if cs then ct[1],cu[1]=ck(ct[1],bS.dropout_rate)end;for cy=2,bS.hidden_layers,1 do ct[cy]={}for cz=1,bS.hidden_size,1 do local cA=0;for cB=1,bS.hidden_size,1 do cA=cA+ct[cy-1][cB]*bS.potentials["hidden"..cy][cB][cz]end;ct[cy][cz]=cb.leaky_relu(cA)end;if cs then ct[cy],cu[cy]=ck(ct[cy],bS.dropout_rate)end end;local cC={}for cD=1,bS.output_size,1 do local cE=0;for cF=1,bS.hidden_size,1 do cE=cE+ct[bS.hidden_layers][cF]*bS.potentials.output[cF][cD]end;if cD==1 then cC[cD]=cb.sigmoid(cE)elseif cD==2 then cC[cD]=an.clamp(cb.sigmoid(cE)*O.MAX_DESYNC_DELTA,0,O.MAX_DESYNC_DELTA)elseif cD==3 then cC[cD]=cb.sigmoid(cE)else cC[cD]=cb.sigmoid(cE)end end;return cC,ct,cu end;local cG={add=function(cH,cI,cJ,cK,...)local cL=globals.curtime()local cM=math.abs(cJ)*(cK and 1.5 or 1)if#bS.training_memory.buffer>=bS.training_memory.max_size then local cN=1;for cO=2,#bS.training_memory.priorities,1 do if bS.training_memory.priorities[cO]<bS.training_memory.priorities[cN]then cN=cO end end;table.remove(bS.training_memory.buffer,cN)table.remove(bS.training_memory.priorities,cN)end;table.insert(bS.training_memory.buffer,{state=cH,action=cI,reward=cJ,timestamp=cL})table.insert(bS.training_memory.priorities,cM)bS.training_stats.total_loss=bS.training_stats.total_loss+math.abs(cJ)bS.training_stats.total_samples=bS.training_stats.total_samples+1;if cL-bS.training_stats.last_update>=bS.training_stats.update_interval then bS.training_stats.avg_loss=bS.training_stats.total_loss/bS.training_stats.total_samples;bS.training_stats.total_loss=0;bS.training_stats.total_samples=0;bS.training_stats.last_update=cL;if bS.training_memory.adaptive_batch_size then if bS.training_stats.avg_loss>0.5 then bS.training_memory.current_batch_size=math.max(bS.training_memory.min_batch_size,bS.training_memory.current_batch_size-4)elseif bS.training_stats.avg_loss<0.09999999999990905 then bS.training_memory.current_batch_size=math.min(bS.training_memory.max_batch_size,bS.training_memory.current_batch_size+4)end end end end,sample=function(...)if#bS.training_memory.buffer<bS.training_memory.current_batch_size then return nil end;local cP={}local cQ=0;for cR,cS in ipairs(bS.training_memory.priorities)do cQ=cQ+cS end;for cT=1,bS.training_memory.current_batch_size,1 do local cU=math.random()*cQ;local cV,cW=0,1;for cX,cY in ipairs(bS.training_memory.priorities)do cV=cV+cY;if cV>=cU then cW=cX;break end end;table.insert(cP,bS.training_memory.buffer[cW])end;return cP end}local function cZ(c_,d0,...)local d1=bS.learning_rate;if c_<0.20000000000004547 then d1=d1*1.7999999999999545 elseif c_>0.7999999999999545 then d1=d1*0.599999999999909 end;if#d0>=3 then local d2=0;for d3=2,#d0,1 do local d4=0;for d5=1,#d0[d3],1 do d4=d4+math.abs(d0[d3][d5]-d0[d3-1][d5])end;d2=d2+1-d4/#d0[d3]end;local d6=d2/(#d0-1)if d6>0.7000000000000455 then d1=d1*0.7999999999999545 end end;return bT.clamp(d1,0.010000000000218279,0.20000000000004547)end;local function d7(d8,...)if not d8 then return 0 end;local d9,da=0,0;local db={}local dc=8;for dd=1,#d8,dc do local de=math.min(dd+dc-1,#d8)local df={}for dg=dd,de,1 do table.insert(df,d8[dg])end;for dh,di in ipairs(df)do local dj=cq(di.state,true)table.insert(db,dj)local dk=0;for dl=1,bS.output_size,1 do local dm=di.action[dl]-dj[dl]dk=dk+dm*dm;if math.abs(dm)<0.20000000000004547 then da=da+1 end end;d9=d9+dk end;collectgarbage("step",50)end;bS.recent_predictions=db;if#bS.recent_predictions>10 then table.remove(bS.recent_predictions,1)end;local dn=da/(bS.output_size*#d8)bS.learning_rate=cZ(dn,bS.recent_predictions)return d9/#d8 end;local function dp(dq,dr,...)bS.patterns[dq]=bS.patterns[dq]or{}table.insert(bS.patterns[dq],dr)if#bS.patterns[dq]>128 then table.remove(bS.patterns[dq],1)end;local ds={entity.get_prop(dq,"m_vecVelocity")}local dt=math.sqrt((ds[1]or 0)^2+(ds[2]or 0)^2)local du=math.min(dt/260,1)bS.movement_patterns[dq]=bS.movement_patterns[dq]or{}table.insert(bS.movement_patterns[dq],{speed=du,desync=dr,timestamp=globals.curtime()})if#bS.movement_patterns[dq]>64 then table.remove(bS.movement_patterns[dq],1)end end;local function dv(dw,...)if not bS.movement_patterns[dw]or#bS.movement_patterns[dw]<8 then return 0,0 end;local dx=bS.movement_patterns[dw]local dy=0.05000000000000071;local dz={}for dA=math.max(1,#dx-16),#dx,1 do table.insert(dz,dx[dA])end;local dB=0;local dC=0;local dD=0;local dE=nil;for dF=2,#dz,1 do local dG=math.abs(dz[dF].speed-dz[dF-1].speed)local dH=math.abs(dz[dF].desync-dz[dF-1].desync)local dI=dz[dF].desync>0 and 1 or-1;if dE and dI~=dE then dD=dD+1 end;dE=dI;if dG>dy then dB=dB+1 end;if dH>5 then dC=dC+1 end end;local dJ=1-dB/(#dz-1)local dK=1-dC/(#dz-1)local dL=1-dD/(#dz-1)dJ=dJ*0.35000000000002274;dK=dK*0.44999999999998863;dL=dL*0.20000000000004547;return dJ+dK+dL,dK end;local function dM(dN,dO,dP,...)if not bS.patterns[dN]or#bS.patterns[dN]<8 then return dO,dP,0.5 end;local dQ=bS.patterns[dN]local dR={}for dS=math.max(1,#dQ-16),#dQ,1 do table.insert(dR,dQ[dS])end;local dT=0;local dU=0;local dV=0;local dW=0;local dX={}for dY=1,#dR,1 do dX[dY]=1+(dY/#dR)^2.5 end;for dZ,d_ in ipairs(dR)do local e0=dX[dZ]dT=dT+d_*e0;dW=dW+e0;if dZ>1 then local e1=dR[dZ-1]>0 and 1 or-1;local e2=d_>0 and 1 or-1;if e1~=e2 then dV=dV+1 end end end;local e3=dT/dW;local e4=0;for e5,e6 in ipairs(dR)do local e7=dX[e5]e4=e4+(e6-e3)^2*e7 end;e4=math.sqrt(e4/dW)local e8=1/(1+e4*1.1999999999999886)local e9=1-dV/(#dR-1)local ea=e3;local eb=dP;if e8>0.6000000000000227 then ea=ea*0.8999999999999773+dO*0.09999999999990905 else ea=ea*0.6999999999999886+dO*0.2999999999999545 end;if e9>0.7000000000000455 then eb=eb*0.9500000000000455+dP*0.0500000000001819 else eb=dP end;return ea,eb,e8 end;local ec={save=function(...)if not bS.persistence.file_persistence then return end;local ed=globals.curtime()if ed-bS.persistence.last_save>=bS.persistence.save_interval then local ee={potentials=bS.potentials,config={input_size=bS.input_size,hidden_size=bS.hidden_size,hidden_layers=bS.hidden_layers,output_size=bS.output_size},training_memory={buffer_size=#bS.training_memory.buffer,memory_count=#bS.training_memory.priorities},metadata={timestamp=ed,version="Unknown",learning_rate=bS.learning_rate}}writefile("nn_data.json",json.stringify(ee))bS.persistence.last_save=ed end end,load=function(...)if not bS.persistence.file_persistence then return false end;local ef=readfile("nn_data.json")if not ef or ef==""then return false end;local eg,eh=pcall(json.parse,ef)if not eg or not eh or not eh.potentials then return false end;if eh.config.input_size==bS.input_size and(eh.config.hidden_size==bS.hidden_size and eh.config.output_size==bS.output_size)then bS.potentials=eh.potentials;return true end;return false end}a.cdef("\tstruct c_animstate { \n\t\tchar pad[3];\n\t\tchar m_bForceWeaponUpdate;\n\t\tchar pad1[91];\n\t\tvoid* m_pBaseEntity;\n\t\tvoid* m_pActiveWeapon;\n\t\tvoid* m_pLastActiveWeapon;\n\t\tfloat m_flLastClientSideAnimationUpdateTime;\n\t\tint m_iLastClientSideAnimationUpdateFramecount;\n\t\tfloat m_flAnimUpdateDelta;\n\t\tfloat m_flEyeYaw;\n\t\tfloat m_flPitch;\n\t\tfloat m_flSpeedNormalized;\n\t\tfloat m_flGoalFeetYaw;\n\t\tfloat m_flAffectedFraction;\n\t\tfloat m_flDuckAmount;\n\t\tfloat m_flCurrentFeetYaw;\n\t\tfloat m_flCurrentTorsoYaw;\n\t\tfloat m_flUnknownVelocityLean;\n\t\tfloat m_flLeanAomunt;\n\t\tchar pad2[4];\n\t\tfloat m_flFeetCycle;\n\t\tfloat m_flFeetYawRate;\n\t\tchar pad3[4];\n\t\tfloat m_fDuckAmount;\n\t\tfloat m_fLandingDuckAdditiveSomething;\n\t\tchar pad4[4];\n\t\tfloat m_vOriginX;\n\t\tfloat m_vOriginY;\n\t\tfloat m_vOriginZ;\n\t\tfloat m_vLastOriginX;\n\t\tfloat m_vLastOriginY;\n\t\tfloat m_vLastOriginZ;\n\t\tfloat m_vVelocityX;\n\t\tfloat m_vVelocityY;\n\t\tchar pad5[4];\n\t\tfloat m_flUnknownFloat1;\n\t\tchar pad6[8];\n\t\tfloat m_flUnknownFloat2;\n\t\tfloat m_flUnknownFloat3;\n\t\tfloat m_flUnknown;\n\t\tfloat m_flSpeed2D;\n\t\tfloat m_flUpVelocity;\n\t\tfloat m_flSpeedNormalized;\n\t\tfloat m_flFeetSpeedForwardsOrSideWays;\n\t\tfloat m_flFeetSpeedUnknownForwardOrSideways;\n\t\tfloat m_flTimeSinceStartedMoving;\n\t\tfloat m_flTimeSinceStoppedMoving;\n\t\tbool m_bOnGround;\n\t\tbool m_bInHitGroundAnimation;\n\t\tfloat m_flTimeSinceInAir;\n\t\tfloat m_flLastOriginZ;\n\t\tfloat m_flHeadHeightOrOffsetFromHittingGroundAnimation;\n\t\tfloat m_flStopToFullRunningFraction;\n\t\tchar pad7[4];\n\t\tfloat m_flMagicFraction;\n\t\tchar pad8[60];\n\t\tfloat m_flWorldForce;\n\t\tchar pad9[462];\n\t\tfloat m_flPlaybackRate;\n\t\tfloat m_flMaxYaw;\n\t};\n\n\ttypedef struct {\n\t\tfloat   m_anim_time;        \n\t\tfloat   m_fade_out_time;    \n\t\tint     m_flags;            \n\t\tint     m_activity;            \n\t\tint     m_priority;            \n\t\tint     m_order;            \n\t\tint     m_sequence;            \n\t\tfloat   m_prev_cycle;        \n\t\tfloat   m_weight;            \n\t\tfloat   m_weight_delta_rate;\n\t\tfloat   m_playback_rate;    \n\t\tfloat   m_cycle;            \n\t\tvoid*   m_owner;            \n\t\tint     m_bits;                \n\t} C_AnimationLayer;\n\n\ttypedef uintptr_t (__thiscall* GetClientEntityHandle_t)(void*, uintptr_t);\n\ttypedef int(__thiscall* get_clipboard_text_count)(void*);\n\ttypedef void(__thiscall* set_clipboard_text)(void*, const char*, int);\n\ttypedef void(__thiscall* get_clipboard_text)(void*, int, const char*, int);\n\ttypedef bool(__thiscall* console_is_visible)(void*);\n\ttypedef void*(__thiscall* get_client_entity_t)(void*, int);\n")local ei={list_ptr=a.cast("void***",client.create_interface("client.dll","VClientEntityList003")),get_entity_fn=nil}ei.get_entity_fn=a.cast("get_client_entity_t",a.cast("void***",client.create_interface("client_panorama.dll","VClientEntityList003"))[0][3])ei.address_cache=setmetatable({},{__mode="kv"})ei.get_address=function(ej,...)if ei.address_cache[ej]then return ei.address_cache[ej]end;local ek=ei.get_entity_fn(ei.list_ptr,ej)if ek==nil then return nil end;ei.address_cache[ej]=ek;return ek end;ei.get_animstate=function(el,...)local em=ei.get_address(el)if not em then return nil end;local en=a.cast("char*",em)return a.cast("struct c_animstate**",en+39264)[0]end;ei.get_animlayer=function(eo,...)local ep=ei.get_address(eo)if not ep then return nil end;local eq=a.cast("char*",ep)return a.cast("C_AnimationLayer**",eq+39264)[0]end;ei.get_state=function(er,...)if not er then return end;local es=entity.get_prop(er,"m_fFlags")local et=entity.get_prop(er,"m_flDuckAmount")>0.7000000000000455;if bit.band(es,1)==1 then return"standing"elseif et then return"ducking"elseif bit.band(es,1)~=1 and bit.band(es,2)~=1 then return"jumping"end end;local function eu(ev,...)if not ev then return end;local ew=entity.get_prop(ev,"m_fFlags")local ex=entity.get_prop(ev,"m_flDuckAmount")>0.6999999999999886;local ey=entity.get_prop(ev,"m_vecVelocity")local ez=math.sqrt((ey[1]or 0)^2+(ey[2]or 0)^2)if bit.band(ew,1)==1 and(not ex and ez<5)then return"standing"elseif ex then return"ducking"elseif bit.band(ew,1)~=1 and bit.band(ew,2)~=1 then return"jumping"end end;local eA={layers={},cache=setmetatable({},{__mode="k"}),state=setmetatable({},{__mode="k"}),get_state=function(eB,eC,...)local eD=eB.state[eC]if not eD then eD={last_update=0,last_desync=0,last_side=0,last_angle=0,force_yaw=false,force_pitch=false,last_pitch=0,confidence=0}eB.state[eC]=eD end;return eD end,should_update=function(eE,eF,eG,...)local eH=eE:get_state(eF)return eG-eH.last_update>=0.015000000000100044 end,update_state=function(eI,eJ,eK,eL,eM,eN,...)local eO=eI:get_state(eJ)eO.last_update=globals.curtime()eO.last_desync=eK.desync;eO.last_side=eK.side;eO.last_angle=eL;eO.last_pitch=eM;eO.confidence=eN end,get_max_desync=function(eP,eQ,...)local eR=eQ.m_flSpeedNormalized;local eS=(eQ.m_flAffectedFraction*-0.2999999999999545-0.19999999999998863)*eR+1;local eT=eQ.m_flDuckAmount;if eT>0 then local eU=eT*eR;eS=eS+eU*(0.5-eS)end;return eS end,update_layers=function(eV,eW,...)if not eW then return end;local eX=ei.get_animlayer(eW)if not eX then return end;eV.layers[eW]=eV.layers[eW]or{}for eY=1,12,1 do local eZ=eX[eY]if eZ then local e_=eV.layers[eW][eY]or{}if e_.m_playback_rate~=eZ.m_playback_rate or e_.m_sequence~=eZ.m_sequence then e_.m_playback_rate=eZ.m_playback_rate;e_.m_sequence=eZ.m_sequence;eV.layers[eW][eY]=e_ end end end end,is_lby_flexing=function(f0,f1,...)if not f0.layers[f1]then return false end;for f2=1,12,1 do if f0.layers[f1][f2]and f0.layers[f1][f2].m_sequence==979 then return true end end;return false end,find_desync=function(f3,f4,...)local f5=ei.get_animstate(f4)if not f5 or not f4 or not entity.is_alive(f4)then return nil end;local f6={entity.get_prop(f4,"m_vecVelocity")}local f7=math.sqrt((f6[1]or 0)^2+(f6[2]or 0)^2)local f8=entity.get_prop(f4,"m_flDuckAmount")or 0;local f9=bit.band(entity.get_prop(f4,"m_fFlags"),1)==1 or true;local fa=not f9;local fb=bit.band(entity.get_prop(f4,"m_fFlags"),2)==1 or true;local fc={entity.get_prop(f4,"m_vecOrigin")}local fd=bS.last_positions[f4]or fc;local fe={x=fc[1]-fd[1],y=fc[2]-fd[2],z=fc[3]-fd[3]}local ff=bS.last_velocities and bS.last_velocities[f4]or f6;local fg={x=f6[1]-ff[1],y=f6[2]-ff[2],z=f6[3]-ff[3]}local fh={pitch=entity.get_prop(f4,"m_angEyeAngles[0]"),yaw=entity.get_prop(f4,"m_angEyeAngles[1]")}local fi=bS.last_angles[f4]or fh;local fj={pitch=fh.pitch-fi.pitch,yaw=fh.yaw-fi.yaw}bS.last_positions[f4]=fc;bS.last_angles[f4]=fh;bS.last_velocities=bS.last_velocities or{}bS.last_velocities[f4]=f6;local fk=math.min(f7/260,1)if fk~=fk then fk=0 end;local fl=entity.get_prop(f4,"m_flPoseParameter",11)*120-57;local fm=math.floor(math.abs(fl))local fn=fl>0 and 1 or fl<0 and-1 or 0;local fo={desync=math.floor((fm+58)/116),velocity=fk,duck=f8,on_ground=f9 and 1 or 0,in_air=fa and 1 or 0,jumping=fb and 1 or 0,pos_delta_x=math.floor(fe.x/30),pos_delta_y=math.floor(fe.y/30),pos_delta_z=math.floor(fe.z/30),velocity_delta_x=math.floor(fg.x/80),velocity_delta_y=math.floor(fg.y/80),velocity_delta_z=math.floor(fg.z/80),angle_delta_pitch=math.floor(fj.pitch/60),angle_delta_yaw=math.floor(fj.yaw/60),eye_yaw=math.floor(f5.m_flEyeYaw/360),goal_feet_yaw=math.floor(f5.m_flGoalFeetYaw/360),current_feet_yaw=math.floor(f5.m_flCurrentFeetYaw/360),current_torso_yaw=math.floor(f5.m_flCurrentTorsoYaw/360),speed_normalized=math.floor(f5.m_flSpeedNormalized*100)/100,affected_fraction=math.floor(f5.m_flAffectedFraction*100)/100,duck_amount=math.floor(f5.m_flDuckAmount*100)/100,lean_amount=math.floor(f5.m_flLeanAomunt*100)/100,feet_cycle=math.floor(f5.m_flFeetCycle*100)/100,feet_yaw_rate=math.floor(f5.m_flFeetYawRate*100)/100,playback_rate=math.floor(f5.m_flPlaybackRate*100)/100,max_yaw=math.floor(f5.m_flMaxYaw/360),time_since_moving=math.floor(f5.m_flTimeSinceStartedMoving*10)/10,time_since_stopped=math.floor(f5.m_flTimeSinceStoppedMoving*10)/10,time_in_air=math.floor(f5.m_flTimeSinceInAir*10)/10}dp(f4,fm)local fp=cq(fo,false)local fq=bT.angle_diff(f5.m_flEyeYaw,f5.m_flGoalFeetYaw)local fr,fs=dv(f4)local ft,fu,fv=dM(f4,fm,fn)local fw=f9 and 1 or 0.5;if fa then local fx=f5.m_flTimeSinceInAir or 0;fw=math.max(0.25,0.5-fx*0.14999999999997726)end;local fy=fp[2]local fz=0.35000000000002274;local fA=0.34999999999990905;local fB=0.20000000000004547;local fC=0.09999999999990905;local fD=(fy*(1-fA-fz-fB)+fr*fz+fv*fA+fs*fB)*(0.900000000000091+fw*fC)local fE=ft*0.6999999999999886+fm*0.2999999999999545;if fa then fE=fE*1.1499999999999773 end;if f8>0.5 then fE=fE*1.1000000000000227 end;local fF=math.abs(fg.x)+math.abs(fg.y)>15;if fF then fE=fE*1.1499999999999773 end;local fG=false;if#bS.patterns[f4]>=4 then local fH=bS.patterns[f4]local fI=#fH;local fJ=0;for fK=fI,math.max(1,fI-3),-1 do if fK>1 then fJ=fJ+math.abs(fH[fK]-fH[fK-1])end end;fG=fJ/3>O.JITTER_DETECTION_THRESHOLD end;if fG then fD=fD*0.8500000000000227;fE=fE*0.900000000000091 end;return{desync=fE,side=fu,angle_diff=fq,eye_pos=fp[3]*178-89,confidence=fD,is_jittering=fG}end,resolve_entity=function(fL,...)if not ui.get(fL.menu.enable)then return end;local fM=entity.get_local_player()if not fM or not q(fM)then return end;local fN=s()if not fN then return end;local fO=x()if not fL:should_update(fN,fO)then return end;fL:update_layers(fN)local fP=fL:find_desync(fN)if not fP then return end;local fQ=p(fN,"m_angEyeAngles[1]")or 0;local fR=fP.confidence;local fS=ei.get_animstate(fN)local fT=eu(fN)local fU=fP.desync*fP.side;if fP.is_jittering then fU=fU*(0.7999999999999545+fR*0.1999999999998181)else fU=fU*fR end;if fT=="standing"and fS then fU=fL:get_max_desync(fS)*(fP.side~=0 and fP.side or 1)if fR<0.5 or fP.is_jittering then fU=-fU end end;local fV=fL:get_state(fN)if h(fV.last_desync-fU)>0.009999999999990905 or h(fV.last_angle-fQ)>0.010000000000218279 then E(fN,"Force body yaw",true)local fW=0;if fP.is_jittering then fW=math.random(-3,3)end;E(fN,"Force body yaw value",fQ+fU+fW)fV.last_desync=fU;fV.last_angle=fQ end;local fX=fP.eye_pos;if fR>0.25 and h(fV.last_pitch-fX)>0.009999999999990905 then E(fN,"Force pitch",true)E(fN,"Force pitch value",fX)fV.last_pitch=fX else E(fN,"Force pitch",false)end end,menu={enable=ui.new_checkbox("Rage","Other",o("Pula\a%sSolver",bR)),optimizations=ui.new_multiselect("Rage","Other","Optimizations","Limit to current threat","Auto-clean cache","Force layer updates","Adjust prediction"),resolver_mode=ui.new_combobox("Rage","Other","Resolver Mode","Neural","Adaptive")}}local function fY(fZ,f_,...)if f_=="Neural"then local g0=entity.get_local_player()if not g0 or not q(g0)then return end;local g1=x()if eA:should_update(fZ,g1)then eA:update_layers(fZ)local g2=eA:find_desync(fZ)if g2 then local g3=p(fZ,"m_angEyeAngles[1]")or 0;local g4=g2.confidence;local g5=g2.desync*g2.side;if g2.is_jittering then g5=g5*(0.7999999999999545+g4*0.20000000000004547)else g5=g5*g4 end;local g6=eA:get_state(fZ)if h(g6.last_desync-g5)>0.009999999999990905 or h(g6.last_angle-g3)>0.009999999999990905 then E(fZ,"Force body yaw",true)local g7=0;if g2.is_jittering then g7=math.random(-3,3)end;E(fZ,"Force body yaw value",g3+g5+g7)g6.last_desync=g5;g6.last_angle=g3 end;local g8=g2.eye_pos;if g4>0.25 and h(g6.last_pitch-g8)>0.010000000000218279 then E(fZ,"Force pitch",true)E(fZ,"Force pitch value",g8)g6.last_pitch=g8 else E(fZ,"Force pitch",false)end end end else local g9=entity.get_local_player()if not g9 or not q(g9)then return end;local ga=a0(fZ)if ga and aV.data[fZ]then local gb=aV.data[fZ]local gc,gd=aV:resolve(fZ)if gc and gd then E(fZ,"Force Body Yaw",true)E(fZ,"Force Body Yaw Value",gc==1 and gd or-gd)end end end end;local function ge(...)if not ui.get(eA.menu.enable)then return end;local gf=ui.get(eA.menu.resolver_mode)local gg=ui.get(eA.menu.optimizations)local gh=false;for gi=1,#gg,1 do if gg[gi]=="Limit to current threat"then gh=true;break end end;if gh then local gj=s()if gj and entity.is_alive(gj)then fY(gj,gf)end else local gk=r(true)for gl=1,#gk,1 do local gm=gk[gl]if entity.is_alive(gm)then fY(gm,gf)end end end end;local gn=ui.new_label("Players","Adjustments","--------------------------------------------")local go=ui.new_label("Players","Adjustments","Side")local gp=ui.new_label("Players","Adjustments","Desync")local gq=ui.new_label("Players","Adjustments","Confidence")local gr=ui.new_label("Players","Adjustments","Speed")local gs=ui.new_label("Players","Adjustments","Air")local gt=ui.new_label("Players","Adjustments","Duck")local gu=ui.new_label("Players","Adjustments","Feet")local gv=ui.new_label("Players","Adjustments","Eye")local gw=ui.new_label("Players","Adjustments","--------------------------------------------")local gx={last_update=0,last_value=0,update_interval=0.5}local function gy(...)local gz=globals.curtime()if gz-gx.last_update>=gx.update_interval then gx.last_update=gz;return true end;return false end;local function gA(...)local gB=ui.get(ui.reference("Players","Players","Player list"))if not gB then return end;local gC=ui.get(eA.menu.resolver_mode)local gD=ui.get(eA.menu.optimizations)local gE=false;for gF=1,#gD,1 do if gD[gF]=="Limit to current threat"then gE=true;break end end;if gE and gB~=s()then ui.set(gn,"--------------------------------------------")ui.set(go,"Not current threat")ui.set(gp,"")ui.set(gq,"")ui.set(gr,"")ui.set(gs,"")ui.set(gt,"")ui.set(gu,"")ui.set(gv,"")ui.set(gw,"--------------------------------------------")return end;if gC=="Neural"then local gG=eA:find_desync(gB)if gG then local gH=gG.side==1 and"Right"or gG.side==-1 and"Left"or"None"local gI=D(gB,"Force Body Yaw value")local gJ=math.floor(gG.eye_pos)local gK=gx.last_value;if gy()then gK=math.floor((gG.confidence or 0.5)*100)gx.last_value=gK end;local gL=eA:get_state(gB)local gM={entity.get_prop(gB,"m_vecVelocity")}local gN=math.floor(math.sqrt((gM[1]or 0)^2+(gM[2]or 0)^2))local gO=bit.band(entity.get_prop(gB,"m_fFlags"),1)==1;local gP=not gO;local gQ=math.floor((entity.get_prop(gB,"m_flDuckAmount")or 0)*100)local gR=ei.get_animstate(gB)local gS=gR and math.floor(gR.m_flCurrentFeetYaw)or 0;local gT=gR and math.floor(gR.m_flEyeYaw)or 0;ui.set(gn,"--------------------------------------------")ui.set(go,string.format("Side: %s",gH))ui.set(gp,string.format("Desync: %d\176",gI))ui.set(gq,string.format("Confidence: %d%%",gK))ui.set(gr,string.format("Speed: %d",gN))ui.set(gs,string.format("Air: %s",gP and"Yes"or"No"))ui.set(gt,o("Duck: %d%%",gQ))ui.set(gu,o("Feet: %d\176",gS))ui.set(gv,o("Eye: %d\176",gT))ui.set(gw,"--------------------------------------------")else ui.set(gn,"--------------------------------------------")ui.set(go,"No resolver data available")ui.set(gp,"")ui.set(gq,"")ui.set(gr,"")ui.set(gs,"")ui.set(gt,"")ui.set(gu,"")ui.set(gv,"")ui.set(gw,"--------------------------------------------")end else local gU=a0(gB)if gU and aV.data[gB]then local gV=aV.data[gB]local gW=gV.side==1 and"Right"or"Left"local gX=aD.get_velocity(gB)local gY=math.floor(aD.length2d(gX))local gZ=bit.band(entity.get_prop(gB,"m_fFlags"),1)==1;local g_=not gZ;local h0=math.floor((entity.get_prop(gB,"m_flDuckAmount")or 0)*100)local h1=aV.analyze_anim_layer(gV.layers)local h2=h1 and h1.weight_spread*100 or 50;ui.set(gn,"--------------------------------------------")ui.set(go,string.format("Side: %s",gW))ui.set(gp,string.format("Desync: %d\176",gV.desync))ui.set(gq,string.format("Confidence: %d%%",h2))ui.set(gr,string.format("Speed: %d",gY))ui.set(gs,string.format("Air: %s",g_ and"Yes"or"No"))ui.set(gt,o("Duck: %d%%",h0))ui.set(gu,o("Moving: %s",h1 and(h1.is_moving and"Yes")or"No"))ui.set(gv,o("Weight: %.2f",h1 and h1.weight_spread or 0))ui.set(gw,"--------------------------------------------")else ui.set(gn,"--------------------------------------------")ui.set(go,"No resolver data available")ui.set(gp,"")ui.set(gq,"")ui.set(gr,"")ui.set(gs,"")ui.set(gt,"")ui.set(gu,"")ui.set(gv,"")ui.set(gw,"--------------------------------------------")end end end;if not ec.load()then ce()end;local function h3(...)local h4=ui.get(eA.menu.optimizations)local h5=false;for h6=1,#h4,1 do if h4[h6]=="Force layer updates"then h5=true;break end end;if not h5 then return end;local h7={}local h8=false;for h9=1,#h4,1 do if h4[h9]=="Limit to current threat"then h8=true;break end end;if h8 then local ha=s()if ha and entity.is_alive(ha)then h7={ha}end else h7=entity.get_players(true)end;for hb,hc in ipairs(h7)do if entity.is_alive(hc)then for hd=0,12,1 do local he=entity.get_prop(hc,"m_flPoseParameter["..hd.."]")if he then entity.set_prop(hc,"m_flPoseParameter["..hd.."]",he+0.009999999999990905)entity.set_prop(hc,"m_flPoseParameter["..hd.."]",he)end end;local hf=ei.get_animlayer(hc)if hf then for hg=0,12,1 do if hf[hg]then local hh=hf[hg].m_playback_rate;if hh~=nil then hf[hg].m_playback_rate=hh+9.999999999763531E-4;hf[hg].m_playback_rate=hh end end end end end end end;client.set_event_callback("paint_ui",function(...)h3()ui.set_visible(eA.menu.optimizations,ui.get(eA.menu.enable))ui.set_visible(eA.menu.resolver_mode,ui.get(eA.menu.enable))gA()end)client.delay_call(0.09999999999990905,function(...)client.exec("play items/medshot4.wav")client.color_log(K,L,M,"PulaSolver ? \000")client.color_log(255,255,255,"Changelogs: ")client.color_log(K,L,M,"PulaSolver ? \000")client.color_log(217,217,217,"Enhanced neural network prediction")client.color_log(K,L,M,"PulaSolver ? \000")client.color_log(217,217,217,"Better movement detection")client.color_log(K,L,M,"PulaSolver ? \000")client.color_log(217,217,217,"Improved resolver accuracy for both neural and adaptive modes")client.color_log(K,L,M,"PulaSolver ? \000")client.color_log(217,217,217,"Made performance optimizations")end)client.set_event_callback("shutdown",ec.save)local hi={entity_cache=setmetatable({},{__mode="k"}),stats={tables_processed=0,entries_removed=0,last_run_time=0,avg_cleanup_time=0},config={max_depth=3,clean_weak_tables=false,debug=false,cache_lifetime=0.5},is_entity_valid=function(hj,hk,...)local hl=z()local hm=hj.entity_cache[hk]if hm and hl-hm.time<hj.config.cache_lifetime then return hm.valid end;local hn=hk and q(hk)hj.entity_cache[hk]={valid=hn,time=hl}return hn end,clean_table=function(ho,hp,hq,hr,...)if type(hp)~="table"then return 0 end;if hr and(hr>ho.config.max_depth and ho.config.max_depth>0)then return 0 end;local hs=getmetatable(hp)if hs and((hs.__mode=="k"or hs.__mode=="v"or hs.__mode=="kv")and not ho.config.clean_weak_tables)then return 0 end;local ht=0;local hu={}for hv,hw in pairs(hp)do if type(hv)=="userdata"and not ho:is_entity_valid(hv)then hu[#hu+1]=hv;ht=ht+1 elseif type(hw)=="userdata"and not ho:is_entity_valid(hw)then hu[#hu+1]=hv;ht=ht+1 elseif hq and not hq(hv,hw)then hu[#hu+1]=hv;ht=ht+1 elseif type(hw)=="table"and hr then ht=ht+ho:clean_table(hw,hq,hr+1)end end;for hx=1,#hu,1 do hp[hu[hx]]=nil end;return ht end,clean_tables=function(hy,hz,hA,...)local hB=z()local hC=0;local hD=function(hE,hF,...)if type(hE)=="userdata"then return hy:is_entity_valid(hE)elseif type(hF)=="userdata"then return hy:is_entity_valid(hF)end;return true end;hA=hA or hD;for hG,hH in pairs(hz)do local hI=hy:clean_table(hH,hA,1)hC=hC+hI;if hy.config.debug and hI>0 then v(255,200,0,o("[TableCleaner] Removed %d entries from %s",hI,hG))end end;hy.stats.tables_processed=hy.stats.tables_processed+#hz;hy.stats.entries_removed=hy.stats.entries_removed+hC;hy.stats.last_run_time=z()-hB;if hy.stats.avg_cleanup_time==0 then hy.stats.avg_cleanup_time=hy.stats.last_run_time else hy.stats.avg_cleanup_time=hy.stats.avg_cleanup_time*0.8999999999999773+hy.stats.last_run_time*0.10000000000002274 end;return hC end,clean_cache=function(hJ,...)local hK=z()local hL={}for hM,hN in pairs(hJ.entity_cache)do if hK-hN.time>hJ.config.cache_lifetime*2 then hL[#hL+1]=hM end end;for hO=1,#hL,1 do hJ.entity_cache[hL[hO]]=nil end end}local function hP(...)local hQ={["NN.movement_patterns"]=bS.movement_patterns,["NN.last_positions"]=bS.last_positions,["NN.last_angles"]=bS.last_angles,["adaptive_resolver.data"]=aV.data,["Resolver.layers"]=eA.layers}if bS.last_velocities then hQ["NN.last_velocities"]=bS.last_velocities end;local hR=hi:clean_tables(hQ)hi:clean_cache()if hR>10 then collectgarbage("step",100)end;return hR end;local hS=0;local hT=5;local hU=function(hV,hW,hX,...)local hY=hW/hX;local hZ=hV/1000;return math.max(hY,hZ)end;local function h_(i0,i1,...)local i2=10^i1;return math.floor(i0*i2+0.5)/i2 end;local function i3(...)return cvar.cl_updaterate and cvar.cl_updaterate:get_int()or 64 end;local function i4(i5,...)return math.max(i5/(client.latency()*1000),client.latency()*1000/i5)end;local i6=function(...)local i7=client.real_latency()or 0;local i8=math.floor(i7*1000)local i9=i3()local ia=i4(i8)local ib=hU(i8,ia,i9)cvar.cl_interpolate:set_int(1)cvar.cl_interp_ratio:set_float(h_(ia,4))cvar.cl_interp:set_float(h_(ib,4))end;local ic=0;client.set_event_callback("pre_render",function(id,...)local ie=ui.get(eA.menu.optimizations)local ig=false;for ih=1,#ie,1 do if ie[ih]=="Adjust prediction"then ig=true;break end end;local ii=entity.get_local_player()if not ii or not q(ii)then return end;if ig then i6()end end)client.set_event_callback("pre_render",function(...)if not ui.get(eA.menu.enable)then return end;ge()local ij=ui.get(eA.menu.optimizations)local ik=false;for il=1,#ij,1 do if ij[il]=="Auto-clean cache"then ik=true;break end end;if ik then local im=client.unix_time()if im-hS>=hT then hP()hS=im end end end)